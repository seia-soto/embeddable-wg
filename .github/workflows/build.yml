name: Release

on:
  release:
    types: [published]

env:
  npm_config_build_from_source: true

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - uses: pnpm/action-setup@v2
      with:
        version: 7
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        cache: pnpm
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Install dependencies
      run: pnpm install && pnpm build:wrapper
    - name: Publish to NPM
      run: pnpm publish --no-git-checks
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - uses: pnpm/action-setup@v2
      with:
        version: 7
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        cache: pnpm
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - name: Install dependencies
      run: pnpm install
    - name: Package artifacts
      run: pnpm build && pnpm node-pre-gyp package
    - name: Upload to Release
      uses: csexton/release-asset-action@v2
      with:
        pattern: build/stage/**/wgbinding*.tar.gz
        github-token: ${{secrets.GITHUB_TOKEN}}
        release-url: ${{github.event.release.upload_url}}
  build-alpine:
    name: Build on Alpine Linux
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
    steps:
      - name: Install build dependencies
        run: apk update && apk add make g++ python3 git linux-headers
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install package manager
        run: npm i -g pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Package artifacts
        run: pnpm build && pnpm node-pre-gyp package
      - name: Upload to Release
        uses: csexton/release-asset-action@v2
        with:
          pattern: build/stage/**/wgbinding*.tar.gz
          github-token: ${{secrets.GITHUB_TOKEN}}
          release-url: ${{github.event.release.upload_url}}
  build-arm:
    name: Build on arm64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu20.04
          - arch: aarch64
            distro: alpine_latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    - uses: uraimo/run-on-arch-action@v2.2.0
      name: Package artifacts
      id: build
      with:
        arch: ${{matrix.arch}}
        distro: ${{matrix.distro}}
        setup: mkdir -p "${PWD}/artifacts"
        dockerRunArgs: --volume "${PWD}:/source"
        env: |
          npm_config_build_from_source: true
        install: |
          case "${{matrix.distro}}" in
            ubuntu*|jessie|stretch|buster)
              apt-get update
              apt-get install -y curl
              curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
              apt-get install -y make g++ python nodejs
              npm i -g pnpm
              ;;
            alpine*)
              apk add --update make g++ python3 linux-headers
              apk add --no-cache nodejs~=18 npm~=9
              npm i -g pnpm
              ;;
          esac
        run: |
          cd /source
          pnpm install
          pnpm build && pnpm node-pre-gyp package
    - name: Upload to Release
      uses: csexton/release-asset-action@v2
      with:
        pattern: build/stage/**/wgbinding*.tar.gz
        github-token: ${{secrets.GITHUB_TOKEN}}
        release-url: ${{github.event.release.upload_url}}